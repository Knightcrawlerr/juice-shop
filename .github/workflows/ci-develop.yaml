name: juice-shop-ci-develop
on:
  push:
    branches:
      - develop

permissions:
  contents: read
  security-events: write

jobs:
  build-lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "22"
      - name: cache npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Run API tests
        run: npm run test:api
      - name: Run lint
        run: npm run lint
      - name: Build frontend
        run: npm run build:frontend
      - name: Build server
        run: npm run build:server

  security-scan:
    runs-on: ubuntu-latest
    needs: build-lint-test
    steps:
      - uses: actions/checkout@v5
      - name: Run Trivy FS scan
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: fs
          scan-ref: .
          format: "sarif"
          exit-code: "0"
          severity: "CRITICAL,HIGH"
          ignore-unfixed: true
          output: "trivy-results.sarif"

      - name: Upload Trivy SARIF report to GitHub
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: trivy-results.sarif

      - name: Checkout infrastructure repository
        uses: actions/checkout@v5
        with:
          repository: Knightcrawlerr/eks-secobs
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: eks-secobs

      - name: Run Checkov on Kubernetes manifests
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./eks-secobs/apps/juice-shop
          framework: helm
          var_file: ./eks-secobs/apps/juice-shop/values-dev.yaml
          output_format: cli, sarif
          output_file_path: console,checkov-results.sarif
          soft_fail: "true"

      - name: Upload SARIF report to GitHub
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: checkov-results.sarif

  docker-build:
    runs-on: ubuntu-latest
    needs: security-scan
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    outputs:
      lowercase_repo: ${{ steps.lowercase_repo.outputs.lowercase_repo }}
      image_tag: ${{ steps.set_output.outputs.image_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Lowercase repository name
        id: lowercase_repo
        run: echo "lowercase_repo=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ env.REGISTRY }}/${{ steps.lowercase_repo.outputs.lowercase_repo }}:sha-${{ github.sha }}
          format: "table"
          exit-code: "0"
          severity: "CRITICAL,HIGH"
          ignore-unfixed: true
          vuln-type: "os,library"

      - name: Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set image tag output
        id: set_output
        run: echo "image_tag=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

  update-k8s-deployment:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - uses: actions/checkout@v5
        with:
          repository: Knightcrawlerr/eks-secobs
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: eks-secobs

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Update Juice Shop image in Kubernetes deployment
        run: |         
          # Update the Helm values file
          cd eks-secobs
          sed -i "s|tag: .*|tag: \"sha-${{ github.sha }}\"|g" apps/juice-shop/values-dev.yaml
      - name: Commit changes
        run: |
          cd eks-secobs
          git add apps/juice-shop/values-dev.yaml
          git commit -m "[CI]: Updated Juice Shop image to ${{ needs.docker-build.outputs.image_tag }} [skip ci]" || echo "No changes to commit"
          git push origin main


          